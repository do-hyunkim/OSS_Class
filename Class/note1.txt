오픈소스sw

리플릿
템플릿 생성 - bath

3.11 월요일 수업 start
 shell ( 쉘)

리눅스 커널과 사용자를 연결해주는 인터페이스
사용자의 입력 알고, 해석하고, 프로그램 실행함
"셸 스크립트 " : 일련으니 명령들을 한 파일에 담아놓음
리눅스 운영체제의 표준인 bash(bourne again shell) 

문법
<프로그램명> <내용>
echo : 셀 명령, 내장명령 , 프로그램
화면에 출력하는 명령어 
( " " -> 역할은 space 까지 한번에 입력을 받아서 인식해라 의미)

변수를 내용에 넣을수 있다.
스페이스를 주의할것
" " 는 사용해도 되고 스페이스 없으면 없어도된다.
변수를 사용할때에는 $ 기호를 사용한다.
내장된 변수도 존재한다. 이것들은 대문자로 지정되어 있다. (변수설정시 대문자로 지정 x)

명령어 특징
한 프로그램이 한가지 일만 한다.
명령어 조합을 잘 해야한다.

명령 
프로그램 자체 
단순명령(simple command) : 프로그램 + 내용(컨텐츠)
복합명령(combine command) : 프로그램 + 옵션 + 내용 
프로그램 
  옵션 : 어떤식으로 프린트를 해라
프로그램을 구체화하는 역할
'-h' << 이렇게 사용 
-a << 대쉬 + 소문자 알파벳

echo + 띄어쓰기 + -a + 내용
/bin <<< /내용 ( /가있으면 맨 홈으로 올라간거고 거기에 bin 이라는 시스템에 접근하는것)

ex)
ls : list
ls -l <<이렇게 표현
cd : change directory

파이프  -> 표준 입력으로 들어감 ( 단 어떤입력은 표준입력으로 들어가지않음)
"  |  " 
명령어 | 명령어
이전 명령행의 출력값을  다음 명령행의 입력값으로 보내는 역할
파이프라인 : 파이프라인으로 연결한 명령행
ex) 'echo $PATH | less' 

wc, head, cut , grep, sort, uniq <<<<<<<<<<<<<다음 수업 퀴즈

입력
stdin : standard input/in  : 표준입력
프롬포트를 통해서 입력되는 입력스트림

stdout : standart output/out : 표준출력
출력 스트림

Q. /bin 하위디렉터리를 라인별로 출력하라.
A. ls -l /bin
프로그램 + 띄어쓰기 + 옵션

ls: 파일과 디렉토리를 보여주는 명령어

-l ( long) : 권한, 포함된 파일 수, 소유자, 그룹, 파일 크기, 수정 일자 등 정보를 나열해 줍니다.
-a (all) : 숨김 파일이나 디렉토리를 모두 보여 줍니다.
-h ( human) : 파일의 용량을 알아보기 쉽게 K, M 등 단위를 사용하여 표시 
(man grep)

1. wc 
파일 내용의 줄 수(line), 단어 수(word), 문자(character)수 출력하는 명령

Q. wc로 이파일의 내용 출력하기
A. wc w1.txt

Q. 지금 디렉터리의 하위 디렉터리 내용의 줄 수 , 단어수, 문자 출력하라
A.  ls -l | wc
1st 하위 디렉터리 조회
2nd

명령인자
-w (단어수)
-l (줄수)
-c (문자수) 

Q. txt 파일이 몇글자인지 세어보자 
A. wc -w w1.txt

Q. /bin 파일+디렉터리 개수 몇개인지 출력
A.  ls -l /bin | wc -l

2. head
파일의 n째줄 내용을 화면에 출력하는 명령
-n : 
head -n3 
(3개까지 출력)
(default = 10)
파일이 90줄인데 -n100 이렇게 하면  전체 다 출력

Q. 이 파일의 1번째 줄 단어수, 글자수 세기
A. head -n1 w1.txt | wc -w -c

Q. /bin 파일 중에서 앞에 다섯개만 출력
A. ls /bin | head -n5 

3. cut
파일의 내용 중에서 특정 열만 출력하는 명령
범위 지정 방법 :
- |t : -f 
james |t 34
f1	 f2

cut -f1 name.txt  

3, 5, 6
cut -f3,5,6
4-5
cut -f4-5

Q. 3번쨰 필드 조회 ( in animal txt)
A. cut -f3 animals.txt

Q. 1번째필드 조회하는데 1번쨰만 출력하기
A. cut -f1 animals.txt | head -n1

-c : charactor 
-c5  << 5번째 캐릭터만
-c-5 << 5번째 까지 캐릭터
-c1,5,6 << 1,5,6 번째 캐릭터

Q. animal.txt 1필드의 1번째 단어 마지막 글자 출력  
A. cut animals.txt -f1 | rev 

마지막 가져오기는 음수 인덱스로  접근하지 않는다.
rev << 명령을 사용해야함.

-d(구분자)
-d, << 쉼표 표시 해야함 
ex ) -d, -f1 이런거처럼

Q.
animals.txt 4번째 필드 : Lutz, Mark에서
Lutz만 출력하기 ( 모든 last name만 가져오기)
A.
cut -f4 animals.txt | cut -d, -f1 (띄어쓰기 중요)



---------------------------------
3. 18

4) grep
-matching
-대소문자 구분함
-라인 전체를 출력한다.

Q. The 가 있는 txt 파일을 전체 조회하라 : *
A. grep The *.txt  
--> 이렇게하면 어디 텍스트에 있는지도 나옴
    grep -v The animals.txt

-   -v : 조건 문자열이 없는 라인 출력 ( The 가 없는 문자열을 출력하는것)

Q. /usr/lib 에 포함된 하위 디렉터리 개수 알아내기
A. ls -ls /usr/lib | cut -c1 | grep d


5. sort
- 정렬, 오름차순(abcd...)
- -r(reverse)
- 숫자 정렬 ( -n) 
  sort -n -r sample.txt
  sort -nr sample.txt

Q. animals.txt 3번째 필드가 숫자 -> 내림차순 정렬해서 출력
A.
 cut -f3 animals.txt | sort -nr

Q. 최소값, 최대값 출력하기
A. 
최대 cut -f3 animals.txt | sort -nr | head -n1
최소 cut -f3 animals.txt | sort -n | head -n1

Q. /etc/passwd 디렉터리에서 사용자 이름 정렬하여 추출하기
A  head /etc/passwd | sort 

-d: 
 : 로 구분된 필드 중 1번째 사용자

Q. 전체 출력하기
A. cut -d: -f1 /etc/passwd

Q. 사용자 중 root가 있는지 확인하기
A.  head /etc/passwd | sort | cut -d: -f1  | grep root

-  | grep root
- Root, root, ROOT
- root "abcdroot'
- _root_   => -w

ex) root, broot, bayroot, rootfile ....
"root"
-w <<< 이거를 쓰면 root 만 있는거를 확인가능


Q. ls, head  차이
- ls : 파일, 디렉터리 목록
- head : 파일 내용 조회

# letters 내용 조회하기
6) uniq
- 중복된 문자열을 제거해서 보여주되, 인접한 중복 문자열만

uniq letters
uniq -c letters : 숫자까지 셀수있음

Q. 성적표(grades 파일)에서 가장 빈번하지 않은 등급부터 출력
A. cut -f1 grades | sort -nr | uniq -c | sort -n (내꺼)
A. 

sort -n
sort 
결과가 같다.

ex) sort -n
1 C
1 A

sort 
1 C 

문자만 출력하고 싶은데
- rev c1 찾는방법(!!!!!!!!!!!!!!) 
- c9 ( 스페이스를 다 찾아서)


